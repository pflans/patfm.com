var ParseManyArray=DS.ParseManyArray=DS.ManyArray.extend({init:function(){this._super.apply(this,arguments),this._deletedItems=new Ember.Set},removeRecord:function(e){var t={id:e.get("id"),type:e.parseClassName()};this._deletedItems.add(t),this._super(e)}});DS.RecordArrayManager.reopen({createManyArray:function(e,t){var r=DS.ParseManyArray.create({type:e,content:t,store:this.store});return Ember.EnumerableUtils.forEach(t,function(e){var t=this.recordArraysForRecord(e);t.add(r)},this),r}});var overriddenHasMany=DS.hasMany;DS.hasMany=function(e,t){return"object"==typeof e&&(t=e,e=void 0),t?t.relation&&!t.async&&(t.async=!0):t={array:!0},overriddenHasMany(e,t)};var ParseAdapter=DS.ParseAdapter=DS.RESTAdapter.extend({defaultSerializer:"Parse",init:function(){this._super(),this.set("headers",{"X-Parse-Application-Id":this.get("applicationId"),"X-Parse-REST-API-Key":this.get("restApiId")})},host:"https://api.parse.com",namespace:"1",classesPath:"classes",buildURL:function(e,t){var r=this._super(e,t),s=this.container.lookupFactory("model:"+e);if(s){var a=[];s.eachRelationship(function(e,t){"hasMany"!==t.kind||t.options.relation||a.push(e)}),a.length>0&&(r=r+"?include="+a.join(","))}return r},pathForType:function(e){var t=this.container.lookupFactory("model:"+e);return DS.ParseUserModel.detect(t)?"users":"login"===e?e:(""+t).indexOf("subclass")>0?this.classesPath+"/"+Ember.String.capitalize(e):this.classesPath+"/"+t.parseClassName()},createRecord:function(e,t,r){var s={},a=e.serializerFor(t.typeKey);a.serializeIntoHash(s,t,r,{includeId:!0});var i=this;return new Ember.RSVP.Promise(function(e,r){i.ajax(i.buildURL(t.typeKey),"POST",{data:s}).then(function(t){var r=Ember.merge(s,t);e(r)},function(e){r(e.responseJSON)})})},updateRecord:function(e,t,r){var s={},a={},i=!1,n=e.serializerFor(t.typeKey);n.serializeIntoHash(s,t,r);var o=r.get("id"),l=this;return t.eachRelationship(function(e){s[e]&&s[e].deleteds&&(a[e]=s[e].deleteds,delete s[e].deleteds,i=!0)}),new Ember.RSVP.Promise(function(e,r){i?l.ajax(l.buildURL(t.typeKey,o),"PUT",{data:a}).then(function(){l.ajax(l.buildURL(t.typeKey,o),"PUT",{data:s}).then(function(t){var r=Ember.merge(s,t);e(r)},function(e){r("Failed to save parent in relation: "+e.response.JSON)})},function(e){r(e.responseJSON)}):l.ajax(l.buildURL(t.typeKey,o),"PUT",{data:s}).then(function(t){var r=Ember.merge(s,t);e(r)},function(e){r(e.responseJSON)})})},findHasMany:function(e,t,r){var s={where:{$relatedTo:{object:{__type:"Pointer",className:Ember.String.capitalize(t.parseClassName()),objectId:t.get("id")},key:r.key}}};return this.ajax(this.buildURL(r.type.typeKey),"GET",{data:s})}});Ember.onLoad("Ember.Application",function(e){e.initializer({name:"parseAdapter",initialize:function(e,t){t.register("adapter:_parse",DS.ParseAdapter)}})});var ParseSerializer=DS.ParseSerializer=DS.RESTSerializer.extend({primaryKey:"objectId",extract:function(e,t,r,s,a){return null===s||"updateRecord"!==a&&"deleteRecord"!==a||(r[this.get("primaryKey")]=s),this._super(e,t,r,s,a)},normalizeAttributes:function(e,t){e.eachAttribute(function(e,r){"date"===r.type&&"object"===Ember.typeOf(t[e])&&t[e].iso&&(t[e]=t[e].iso)}),this._super(e,t)},normalizeRelationships:function(e,t){var r=this.get("store"),s=this;e.eachRelationship(function(e,a){var i=a.options;t[e]&&"belongsTo"===a.kind&&(t[e]=t[e].objectId),t[e]&&"hasMany"===a.kind&&(i.relation&&(t.links={},t.links[e]={type:a.type,key:e}),i.array&&t[e].length&&t[e]&&t[e].forEach(function(e,t,i){"Pointer"===e.__type?i[t]=e.objectId:(delete e.__type,delete e.className,e.id=e.objectId,delete e.objectId,e.type=a.type,s.normalizeAttributes(a.type,e),s.normalizeRelationships(a.type,e),r.push(a.type,e))}))},this),this._super(e,t)},normalizePayload:function(e,t){var r={};return r[e.typeKey]=t.results?t.results:t,r},serializeIntoHash:function(e,t,r,s){Ember.merge(e,this.serialize(r,s))},serializeAttribute:function(e,t,r,s){"createdAt"===r||"updatedAt"===r||"emailVerified"===r||"sessionToken"===r?delete t[r]:"currentUser"===r?delete t[r]:"date"===s.type&&"createdAt"!==r&&"updatedAt"!==r?t[r]={__type:"Date",iso:e.get(r).toISOString()}:this._super(e,t,r,s)},serializeBelongsTo:function(e,t,r){var s=r.key,a=e.get(s);a&&(t[s]={__type:"Pointer",className:a.parseClassName(),objectId:a.get("id")})},serializeHasMany:function(e,t,r){var s=r.key,a=e.get(s),i=r.options;if(a&&a.get("length")>0){if(t[s]={objects:[]},i.relation&&(t[s].__op="AddRelation"),i.array&&(t[s].__op="AddUnique"),a.forEach(function(e){t[s].objects.push({__type:"Pointer",className:e.parseClassName(),objectId:e.get("id")})}),a._deletedItems&&a._deletedItems.length){if(i.relation){var n=t[s],o={__op:"RemoveRelation",objects:[]};a._deletedItems.forEach(function(e){o.objects.push({__type:"Pointer",className:e.type,objectId:e.id})}),t[s]={__op:"Batch",ops:[n,o]}}i.array&&(t[s].deleteds={__op:"Remove",objects:[]},a._deletedItems.forEach(function(e){t[s].deleteds.objects.push({__type:"Pointer",className:e.type,objectId:e.id})}))}}else t[s]=[]}});Ember.onLoad("Ember.Application",function(e){e.initializer({name:"parseSerializer",initialize:function(e,t){t.register("serializer:_parse",DS.ParseSerializer)}})});var ParseModel=DS.ParseModel=DS.Model.extend({createdAt:DS.attr("date"),updatedAt:DS.attr("date"),parseClassName:function(){return this.constructor.parseClassName()}});ParseModel.reopenClass({parseClassName:function(){var e=""+this;return e.split(".").pop()}});var ParseUserModel=DS.ParseUserModel=ParseModel.extend({username:DS.attr("string"),password:DS.attr("string"),email:DS.attr("string"),emailVerified:DS.attr("boolean"),sessionToken:DS.attr("string"),currentUser:DS.attr("boolean"),isCurrent:Ember.computed.bool("currentUser"),logout:function(){var e=this.get("store").adapterFor(this.constructor);this.set("currentUser",!1),this._setCurrent(e,null)},requestPasswordReset:function(e){var t=this.get("store").adapterFor(this.constructor),r={email:this.get("email")};t.ajax(t.buildURL("requestPasswordReset"),"POST",{data:r}).then(function(t){e(t)},function(t){e(t.responseJSON)})},save:function(){if(void 0!==typeof localStorage){var e=JSON.parse(localStorage.getItem("ember_parse_user")),t=this.get("id"),r=this.get("store").adapterFor(this.constructor),s=r.get("headers");t===e.userId&&(s["X-Parse-Session-Token"]=this.get("sessionToken")||e.session,r.set("headers",s))}return this._super()},_setCurrent:function(e,t){ParseUserModel._setCurrent(e,t)}});ParseUserModel.reopenClass({_setCurrent:function(e,t){var r=e.get("headers");if(t){if(r["X-Parse-Session-Token"]=t.sessionToken,"undefined"!=typeof localStorage){var s={session:t.sessionToken,userId:t.id};localStorage.setItem("ember_parse_user",JSON.stringify(s))}}else delete r["X-Parse-Session-Token"],"undefined"!=typeof localStorage&&localStorage.removeItem("ember_parse_user");e.set("headers",r)},login:function(e,t){Ember.isEmpty(this.typeKey)&&(this.typeKey=this.parseClassName().toLowerCase());var r=this,s=ParseUserModel.store,a=s.adapterFor(r),i=s.serializerFor(r.typeKey),n={username:e,password:t};return new Ember.RSVP.Promise(function(e,t){a.ajax(a.buildURL("login"),"GET",{data:n}).then(function(t){i.normalize(r,t),t.currentUser=!0;var n=s.push(r.typeKey,t);ParseUserModel._setCurrent(a,t),e(n)},function(e){ParseUserModel._setCurrent(a,null),t(e.responseJSON)})})},signup:function(e,t,r){Ember.isEmpty(this.typeKey)&&(this.typeKey=this.parseClassName().toLowerCase());var s=this,a=ParseUserModel.store,i=a.adapterFor(s),n=a.serializerFor(s.typeKey),o={username:e,password:t,email:r};return new Ember.RSVP.Promise(function(t,l){i.ajax(i.buildURL(s.typeKey),"POST",{data:o}).then(function(o){n.normalize(s,o),o.currentUser=!0,o.email=r,o.username=e;var l=a.push(s.typeKey,o);ParseUserModel._setCurrent(i,o),t(l)},function(e){ParseUserModel._setCurrent(i,null),l(e.responseJSON)})})}}),ParseUserModel.reopenClass({parseClassName:function(){return"_User"}}),Ember.onLoad("Ember.Application",function(e){e.initializer({name:"parseUserStore",initialize:function(e){var t=e.lookup("store:main");DS.ParseUserModel.store=t}})});